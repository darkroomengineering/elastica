{"version":3,"file":"elastica.js","sources":["../packages/engine/src/index.js"],"sourcesContent":["export default class Elastica {\n  constructor({\n    gridSize = 4,\n    containerOffsets = { top: 0, bottom: 0, left: 0, right: 0 },\n    collisions = true,\n    borders = 'rigid',\n  } = {}) {\n    this.calculatecCollisions = collisions\n    this.calculateBorders = borders\n    this.gridSize = gridSize\n    this.containerOffsets = containerOffsets\n    this.positions = []\n    this.velocities = []\n    this.externalForces = []\n    this.dimensions = []\n    this.bounced = []\n    this.hash = []\n    this.container = {}\n    this.collisionsList = []\n  }\n  //TODO pass elements to objects and not to array\n\n  initialCondition(elements, rect, callback = () => {}) {\n    this.container = rect\n\n    this.dimensions = elements.map((element, index) => {\n      if (!element) return [0, 0]\n\n      this.externalForces[index] = [0, 0]\n      this.bounced[index] = 0\n\n      const { rect: elementRect } = element\n\n      return [elementRect.width / 2, elementRect.height / 2]\n    })\n\n    callback(this)\n\n    this.positions.forEach((pos, index) => {\n      this.hash[index] =\n        Math.floor(this.gridSize * (pos[0] / this.container.width)) +\n        Math.floor(this.gridSize * (pos[1] / this.container.height)) *\n          this.gridSize\n\n      this.setPosition(elements[index]?.element, {\n        x: pos[0] - this.dimensions[index][0],\n        y: pos[1] - this.dimensions[index][1],\n      })\n    })\n  }\n\n  polarCoordinates(vector) {\n    let speed = Math.sqrt(vector[0] * vector[0] + vector[1] * vector[1])\n    const angle = Math.atan2(vector[1], vector[0])\n\n    return { speed, angle }\n  }\n\n  cartesianCoordinates(speed, angle) {\n    return [speed * Math.cos(angle), speed * Math.sin(angle)]\n  }\n\n  hasBounced(index) {\n    return (this.bounced[index] += 1)\n  }\n\n  setPosition(element, { x = 0, y = 0, z = 0 }) {\n    if (element) {\n      element.style.cssText = `transform: translate3d(${x}px, ${y}px, ${z}px); will-change: transform;`\n    }\n  }\n\n  rigidBorders(elements) {\n    if (this.calculateBorders !== 'rigid') return\n\n    const top = this.containerOffsets.top\n    const left = this.containerOffsets.left\n    const right = this.containerOffsets.right + 1\n    const bottom = this.containerOffsets.bottom + 1\n\n    for (let index = 0; index < elements.length; index++) {\n      // Particle cinematic properties\n      const dimension = this.dimensions[index]\n      let velocity = this.velocities[index]\n      let position = this.positions[index]\n\n      // Top wall\n      if (position[1] < dimension[1] + this.container.height * top) {\n        this.hasBounced(index)\n        this.velocities[index][1] = -velocity[1]\n        this.positions[index][1] = dimension[1] + this.container.height * top\n      }\n\n      // Left wall\n      if (position[0] < dimension[0] + this.container.width * left) {\n        this.hasBounced(index)\n        this.velocities[index][0] = -velocity[0]\n        this.positions[index][0] = dimension[0] + this.container.width * left\n      }\n\n      // Bottom wall\n      if (position[1] > this.container.height * bottom - dimension[1]) {\n        this.hasBounced(index)\n        this.velocities[index][1] = -velocity[1]\n        this.positions[index][1] = this.container.height * bottom - dimension[1]\n      }\n\n      // Right wall\n      if (position[0] > this.container.width * right - dimension[0]) {\n        this.hasBounced(index)\n        this.velocities[index][0] = -velocity[0]\n        this.positions[index][0] = this.container.width * right - dimension[0]\n      }\n    }\n  }\n\n  periodicBorders(elements) {\n    if (this.calculateBorders !== 'periodic') return\n\n    const top = this.containerOffsets.top\n    const left = this.containerOffsets.left\n    const right = this.containerOffsets.right + 1\n    const bottom = this.containerOffsets.bottom + 1\n\n    for (let index = 0; index < elements.length; index++) {\n      // Particle cinematic properties\n      const dimension = this.dimensions[index]\n      let position = this.positions[index]\n      let dir = this.velocities[index].map((v) => Math.sign(v))\n\n      // Top wall\n      if (\n        dir[1] === -1 &&\n        position[1] < dimension[1] + this.container.height * top\n      ) {\n        this.positions[index][1] = dimension[1] + this.container.height * bottom\n      }\n\n      // Bottom wall\n      if (\n        dir[1] === 1 &&\n        position[1] > this.container.height * bottom - dimension[1]\n      ) {\n        this.positions[index][1] = this.container.height * top - dimension[1]\n      }\n\n      // Left wall\n      if (\n        dir[0] === -1 &&\n        position[0] < dimension[0] + this.container.width * left\n      ) {\n        this.positions[index][0] = dimension[0] + this.container.width * right\n      }\n\n      // Right wall\n      if (\n        dir[0] === 1 &&\n        position[0] > this.container.width * right - dimension[0]\n      ) {\n        this.positions[index][0] = this.container.width * left - dimension[0]\n      }\n    }\n  }\n\n  isNeighboor(current, index) {\n    const neighboorHash = this.hash[index]\n    let hashItem = this.hash[current]\n    let isNeighboor = false\n\n    for (let i = -1; i < 2; i++) {\n      for (let j = -1; j < 2; j++) {\n        let box = hashItem + this.gridSize * i + j\n\n        if (box < 0 || box > this.gridSize * this.gridSize) {\n          continue\n        }\n\n        if (box === neighboorHash) {\n          isNeighboor = true\n          break\n        }\n      }\n    }\n\n    return isNeighboor\n  }\n\n  axisAlignedBoundaryBoxes(index, idy) {\n    const dimension = this.dimensions[index]\n    const position = this.positions[index]\n\n    const neighboorDimension = this.dimensions[idy]\n    const neighboorPosition = this.positions[idy]\n\n    const overlaping = position.map(\n      (pos, idx) =>\n        Math.abs(pos - neighboorPosition[idx]) <\n        dimension[idx] + neighboorDimension[idx],\n    )\n\n    return overlaping.every((overlap) => overlap)\n  }\n\n  //TODO improve this function\n  calculateSuperposition(index, idy) {\n    const posA = this.positions[index]\n    const dimA = this.dimensions[index]\n    const posB = this.positions[idy]\n    const dimB = this.dimensions[idy]\n\n    const overlaping = posA.map(\n      (pos, idx) => dimA[idx] + dimB[idx] - Math.abs(pos - posB[idx]),\n    )\n\n    const overlapDir = posA.map((pos, idx) => -Math.sign(pos - posB[idx]))\n\n    return overlaping.map((v, i) => overlapDir[i] * Math.max(1 / v, 0.5))\n  }\n\n  collisions(elements) {\n    if (!this.calculatecCollisions) return\n    this.collisionsList = []\n\n    for (let index = 0; index < elements.length; index++) {\n      let velocity = this.velocities[index]\n\n      // Collisions from particle X to all other\n      this.hash.forEach((neighboorHash, idy) => {\n        //Discard same element\n        if (idy === index) return\n\n        let neighboorVelocity = this.velocities[idy]\n\n        // Collisions are pairwise so need to check if already collided\n        if (\n          this.collisionsList.some(\n            ({ loop, inHash }) => loop === idy && inHash === index,\n          )\n        )\n          return\n\n        // Discard if not a neighboor\n        if (!this.isNeighboor(index, idy)) return\n\n        const hasCollision = this.axisAlignedBoundaryBoxes(index, idy)\n\n        //no colisions\n        if (!hasCollision) {\n          return\n        }\n\n        // Add to collision list\n        this.collisionsList.push({ loop: index, inHash: idy })\n\n        // Calculate initial kinetic energy\n        const initialKE =\n          0.5 *\n          (velocity.reduce((sum, v) => sum + v * v, 0) +\n            neighboorVelocity.reduce((sum, v) => sum + v * v, 0))\n\n        // Resolve superpositions\n        let exclusionForce = this.calculateSuperposition(index, idy)\n\n        // Apply superposition forces\n        let collisonVelocity = velocity.map((v, idx) => v + exclusionForce[idx])\n        let neighboorCollisionVelocity = neighboorVelocity.map(\n          (v, idx) => v - exclusionForce[idx],\n        )\n\n        // Calculate new kinetic energy\n        const finalKE =\n          0.5 *\n          (collisonVelocity.reduce((sum, v) => sum + v * v, 0) +\n            neighboorCollisionVelocity.reduce((sum, v) => sum + v * v, 0))\n\n        // Scale velocities to conserve energy\n        if (finalKE !== 0) {\n          const scale = Math.sqrt(initialKE / finalKE)\n          collisonVelocity = collisonVelocity.map((v) => v * scale)\n          neighboorCollisionVelocity = neighboorCollisionVelocity.map(\n            (v) => v * scale,\n          )\n        }\n\n        // Swap velocities\n        this.velocities[index] = neighboorCollisionVelocity\n        this.velocities[idy] = collisonVelocity\n      })\n    }\n  }\n\n  update(elements, callback) {\n    this.rigidBorders(elements)\n    this.periodicBorders(elements)\n    this.collisions(elements)\n    callback(this)\n\n    this.positions.forEach((pos, index) => {\n      this.hash[index] =\n        Math.floor((this.gridSize * pos[0]) / this.container.width) +\n        Math.floor((this.gridSize * pos[1]) / this.container.height) *\n          this.gridSize\n    })\n  }\n}\n"],"names":[],"mappings":"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"}