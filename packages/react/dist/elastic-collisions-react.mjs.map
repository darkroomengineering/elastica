{"version":3,"file":"elastic-collisions-react.mjs","sources":["../../engine/dist/elastic-collisions.mjs","../src/presets.js","../src/index.js","../src/utils.js"],"sourcesContent":["class ElasticCollision{constructor({gridSize:i=4,containerOffsets:t={top:0,bottom:0,left:0,right:0},collisions:s=!0,borders:o=\"rigid\",collisionRandomness:e=0}={}){this.calculatecCollisions=s,this.calculateBorders=o,this.gridSize=i,this.containerOffsets=t,this.positions=[],this.velocities=[],this.externalForces=[],this.dimensions=[],this.bounced=[],this.hash=[],this.container={},this.collisionsList=[]}initialConditions(i,t,s=()=>{}){this.container=t,this.dimensions=i.map(((i,t)=>{if(!i)return[0,0];this.externalForces[t]=[0,0];const{rect:s}=i;return[s.width/2,s.height/2]})),s(this),this.positions.forEach(((t,s)=>{this.hash[s]=Math.floor(this.gridSize*(t[0]/this.container.width))+Math.floor(this.gridSize*(t[1]/this.container.height))*this.gridSize,this.setPosition(i[s]?.element,{x:t[0],y:t[1]})}))}polarCoordinates(i){return{speed:Math.sqrt(i[0]*i[0]+i[1]*i[1]),angle:Math.atan2(i[1],i[0])}}cartesianCoordinates(i,t){return[i*Math.cos(t),i*Math.sin(t)]}hasBounced(i){return this.bounced[i]+=1}setPosition(i,{x:t=0,y:s=0,z:o=0}){i&&(i.style.cssText=`transform: translate3d(${t}px, ${s}px, ${o}px);`)}rigidBorders(i){if(\"rigid\"!==this.calculateBorders)return;const t=this.containerOffsets.top,s=this.containerOffsets.left,o=this.containerOffsets.right+1,e=this.containerOffsets.bottom+1;for(let h=0;h<i.length;h++){const i=this.dimensions[h];let n=this.velocities[h],r=this.positions[h];r[1]<i[1]+this.container.height*t&&(this.hasBounced(h),this.velocities[h][1]=-n[1],this.positions[h][1]=i[1]+this.container.height*t),r[0]<i[0]+this.container.width*s&&(this.hasBounced(h),this.velocities[h][0]=-n[0],this.positions[h][0]=i[0]+this.container.width*s),r[1]>this.container.height*e-i[1]&&(this.hasBounced(h),this.velocities[h][1]=-n[1],this.positions[h][1]=this.container.height*e-i[1]),r[0]>this.container.width*o-i[0]&&(this.hasBounced(h),this.velocities[h][0]=-n[0],this.positions[h][0]=this.container.width*o-i[0])}}periodicBorders(i){if(\"periodic\"!==this.calculateBorders)return;const t=this.containerOffsets.top,s=this.containerOffsets.left,o=this.containerOffsets.right+1,e=this.containerOffsets.bottom+1;for(let h=0;h<i.length;h++){const i=this.dimensions[h];let n=this.positions[h],r=this.velocities[h].map((i=>Math.sign(i)));-1===r[1]&&n[1]<i[1]+this.container.height*t&&(this.positions[h][1]=i[1]+this.container.height*e),1===r[1]&&n[1]>this.container.height*e-i[1]&&(this.positions[h][1]=this.container.height*t-i[1]),-1===r[0]&&n[0]<i[0]+this.container.width*s&&(this.positions[h][0]=i[0]+this.container.width*o),1===r[0]&&n[0]>this.container.width*o-i[0]&&(this.positions[h][0]=this.container.width*s-i[0])}}isNeighboor(i,t){const s=this.hash[t];let o=this.hash[i],e=!1;for(let i=-1;i<2;i++)for(let t=-1;t<2;t++){let h=o+this.gridSize*i+t;if(!(h<0||h>this.gridSize*this.gridSize)&&h===s){e=!0;break}}return e}axisAlignedBoundaryBoxes(i,t){const s=this.dimensions[i],o=this.positions[i],e=this.dimensions[t],h=this.positions[t];return o.map(((i,t)=>Math.abs(i-h[t])<s[t]+e[t])).every((i=>i))}calculateSuperposition(i,t){const s=this.positions[i],o=this.dimensions[i],e=this.positions[t],h=this.dimensions[t],n=s.map(((i,t)=>o[t]+h[t]-Math.abs(i-e[t]))),r=s.map(((i,t)=>-Math.sign(i-e[t])));return n.map(((i,t)=>r[t]*Math.max(1/i,.1)))}collisions(i){if(this.calculatecCollisions){this.collisionsList=[];for(let t=0;t<i.length;t++){let i=this.velocities[t];this.hash.forEach(((s,o)=>{if(o===t)return;let e=this.velocities[o];if(this.collisionsList.some((({loop:i,inHash:s})=>i===o&&s===t)))return;if(!this.isNeighboor(t,o))return;if(!this.axisAlignedBoundaryBoxes(t,o))return;this.collisionsList.push({loop:t,inHash:o});const h=.5*(i.reduce(((i,t)=>i+t*t),0)+e.reduce(((i,t)=>i+t*t),0));let n=this.calculateSuperposition(t,o),r=i.map(((i,t)=>i+n[t])),a=e.map(((i,t)=>i-n[t]));const c=.5*(r.reduce(((i,t)=>i+t*t),0)+a.reduce(((i,t)=>i+t*t),0));if(0!==c){const i=Math.sqrt(h/c);r=r.map((t=>t*i)),a=a.map((t=>t*i))}this.velocities[t]=a,this.velocities[o]=r}))}}}update(i,t){this.rigidBorders(i),this.periodicBorders(i),this.collisions(i),t(this),this.positions.forEach(((i,t)=>{this.hash[t]=Math.floor(this.gridSize*i[0]/this.container.width)+Math.floor(this.gridSize*i[1]/this.container.height)*this.gridSize}))}}export{ElasticCollision as default};\n//# sourceMappingURL=elastic-collisions.mjs.map\n","function randomInitialConditions({ boxes, positions, velocities, container }) {\n  boxes.forEach((_, index) => {\n    positions[index] = [\n      Math.random() * container.width,\n      Math.random() * container.height,\n    ]\n    velocities[index] = [\n      0.5 * (Math.random() - 0.5),\n      0.5 * (Math.random() - 0.5),\n    ]\n  })\n}\n\nexport const initalConditionsPresets = {\n  random: randomInitialConditions,\n}\n\nfunction dvdAnimation({ boxes, positions, velocities, deltaTime }) {\n  boxes.forEach((_, index) => {\n    positions[index] = positions[index].map(\n      (pos, i) => pos + velocities[index][i] * deltaTime,\n    )\n  })\n}\n\nfunction DragAndGravity({\n  boxes,\n  positions,\n  velocities,\n  deltaTime,\n  externalForces,\n}) {\n  boxes.forEach((_, index) => {\n    let velocity = velocities[index]\n    let position = positions[index]\n    let draggin = externalForces[index]\n    const flow = [0, -0.1]\n\n    velocity = velocity.map(\n      (v, i) => v + deltaTime * -0.001 * (v - 4 * draggin[i] + flow[i]),\n    )\n\n    position = position.map((pos, i) => pos + velocity[i] * deltaTime)\n\n    positions[index] = position\n    velocities[index] = velocity\n\n    externalForces[index] = [0, 0]\n  })\n}\n\nfunction rightFlow({\n  boxes,\n  positions,\n  velocities,\n  externalForces,\n  deltaTime,\n}) {\n  boxes.forEach((_, index) => {\n    let velocity = velocities[index]\n    let position = positions[index]\n    let draggin = externalForces[index]\n    const flow = [0.5 * (Math.random() - 0.5), 0.05 * (Math.random() - 0.5)]\n\n    velocity = velocity.map(\n      (v, i) => v + deltaTime * -0.001 * (v - 4 * draggin[i] + flow[i]),\n    )\n\n    positions[index] = position = position.map(\n      (pos, i) => pos + velocity[i] * deltaTime,\n    )\n\n    positions[index] = position\n    velocities[index] = velocity\n\n    externalForces[index] = [0, 0]\n  })\n}\n\nexport const updatePresets = {\n  dvdAnimation,\n  DragAndGravity,\n  rightFlow,\n}\n\nfunction dragForce(newDir, externalForces, index) {\n  let norm = newDir.map((pos) => pos * pos).reduce((a, b) => a + b)\n  norm = Math.sqrt(norm)\n\n  if (norm === 0) return\n  externalForces[index] = newDir.map((pos) => pos / norm)\n}\n\nexport const dragForcePresetsLib = {\n  default: dragForce,\n}\n","import { useFrame, useRect } from '@darkroom.engineering/hamo'\nimport { useDrag } from '@use-gesture/react'\nimport React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport ElasticCollision from '../../engine/dist/elastic-collisions.mjs'\nimport {\n  dragForcePresetsLib,\n  initalConditionsPresets,\n  updatePresets,\n} from './presets'\nimport { isEmptyArray } from './utils'\n\nconst ElasticCollisionContext = createContext({})\n\nfunction useElasticCollision() {\n  return useContext(ElasticCollisionContext)\n}\n\nfunction ReactElasticCollision({\n  children,\n  className,\n  config = {\n    gridSize: 8,\n    collisions: true,\n    borders: 'rigid',\n    containerOffsets: {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n    },\n  },\n  initialConditions = () => {},\n  update = () => {},\n}) {\n  const boxesRefs = useRef(new Map())\n  const [sectionRectRef, sectionRect] = useRect()\n  const [elasticCollision] = useState(() => new ElasticCollision(config))\n\n  const addBox = useCallback((element, slide) => {\n    boxesRefs.current.set(element, slide)\n  }, [])\n  const removeBox = useCallback((element) => {\n    boxesRefs.current.delete(element)\n  }, [])\n\n  useEffect(() => {\n    const boxes = [...boxesRefs.current.values()]\n\n    if (isEmptyArray(boxes) || boxes.some(({ rect }) => !rect)) return\n\n    elasticCollision.initialConditions(boxes, sectionRect, (instances) =>\n      initialConditions({ boxes, ...instances }),\n    )\n  }, [elasticCollision, sectionRect])\n\n  useFrame((_, deltaTime) => {\n    const boxes = [...boxesRefs.current.values()]\n\n    elasticCollision.update(boxes, (instance) => {\n      update({ boxes, ...instance, deltaTime })\n\n      boxes.forEach((element, index) => {\n        const position = instance.positions[index]\n        const dimensions = instance.dimensions[index]\n\n        instance?.setPosition(element?.element, {\n          // shift centers element to center of mass\n          x: position[0] - dimensions[0],\n          y: position[1],\n        })\n      })\n    })\n  })\n\n  return (\n    <div\n      className={className}\n      ref={sectionRectRef}\n      style={{ position: 'relative', width: '100%', height: '100%' }}\n    >\n      <ElasticCollisionContext.Provider\n        value={{ addBox, removeBox, elasticCollision }}\n      >\n        {children}\n      </ElasticCollisionContext.Provider>\n    </div>\n  )\n}\n\nfunction CollisionBox({\n  className,\n  children,\n  onDragStop = null,\n  index = 0,\n  ...props\n}) {\n  const { addBox, removeBox, elasticCollision } = useElasticCollision()\n  const [setRectRef, rect] = useRect()\n  const elementRef = useRef()\n\n  useEffect(() => {\n    if (elementRef.current) {\n      addBox(elementRef.current, {\n        element: elementRef.current,\n        rect,\n      })\n\n      return () => {\n        removeBox(elementRef.current)\n      }\n    }\n  }, [rect, addBox, removeBox])\n\n  const bind = useDrag(({ down, movement: [mx, my] }) => {\n    if (down && onDragStop) {\n      onDragStop([mx, my], elasticCollision.externalForces, index)\n    }\n  })\n\n  return (\n    <div\n      ref={(node) => {\n        elementRef.current = node\n        setRectRef(node)\n      }}\n      className={className}\n      {...props}\n    >\n      <div {...bind()}>{children}</div>\n    </div>\n  )\n}\n\nexport default ReactElasticCollision\nexport {\n  CollisionBox,\n  dragForcePresetsLib,\n  initalConditionsPresets,\n  updatePresets,\n  useElasticCollision,\n}\n","export function isEmptyArray(arr) {\n  if (!arr) return true\n\n  return Array.isArray(arr) && arr.length === 0\n}\n"],"names":["ElasticCollision","constructor","gridSize","i","containerOffsets","t","top","bottom","left","right","collisions","s","borders","o","collisionRandomness","e","this","calculatecCollisions","calculateBorders","positions","velocities","externalForces","dimensions","bounced","hash","container","collisionsList","initialConditions","map","rect","width","height","forEach","Math","floor","setPosition","element","x","y","polarCoordinates","speed","sqrt","angle","atan2","cartesianCoordinates","cos","sin","hasBounced","z","style","cssText","rigidBorders","h","length","n","r","periodicBorders","sign","isNeighboor","axisAlignedBoundaryBoxes","abs","every","calculateSuperposition","max","some","loop","inHash","push","reduce","a","c","update","initalConditionsPresets","random","randomInitialConditions","boxes","_","index","updatePresets","dvdAnimation","deltaTime","pos","DragAndGravity","velocity","position","draggin","flow","v","rightFlow","dragForcePresetsLib","default","dragForce","newDir","norm","b","ElasticCollisionContext","createContext","useElasticCollision","useContext","ReactElasticCollision","children","className","config","boxesRefs","useRef","Map","sectionRectRef","sectionRect","useRect","elasticCollision","useState","addBox","useCallback","slide","current","set","removeBox","delete","useEffect","values","isEmptyArray","arr","Array","isArray","instances","useFrame","instance","React","createElement","ref","Provider","value","CollisionBox","onDragStop","props","setRectRef","elementRef","bind","useDrag","down","movement","mx","my","_extends","node"],"mappings":"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"}