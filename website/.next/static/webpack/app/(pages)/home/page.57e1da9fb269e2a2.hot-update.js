"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(pages)/home/page",{

/***/ "(app-pages-browser)/../packages/react/dist/elastic-collisions-react.mjs":
/*!***********************************************************!*\
  !*** ../packages/react/dist/elastic-collisions-react.mjs ***!
  \***********************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CollisionBox: function() { return /* binding */ CollisionBox; },\n/* harmony export */   \"default\": function() { return /* binding */ ReactElasticCollision; },\n/* harmony export */   useElasticCollision: function() { return /* binding */ useElasticCollision; }\n/* harmony export */ });\n/* harmony import */ var _darkroom_engineering_hamo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @darkroom.engineering/hamo */ \"(app-pages-browser)/../node_modules/.pnpm/@darkroom.engineering+hamo@0.6.45_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@darkroom.engineering/hamo/dist/hamo.modern.mjs\");\n/* harmony import */ var _use_gesture_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @use-gesture/react */ \"(app-pages-browser)/../node_modules/.pnpm/@use-gesture+react@10.3.1_react@18.3.1/node_modules/@use-gesture/react/dist/use-gesture-react.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.4_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1_sass@1.77.8/node_modules/next/dist/compiled/react/index.js\");\nvar _s = $RefreshSig$();\n\n\n\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(t) {\n        for(var i = 1; i < arguments.length; i++){\n            var s = arguments[i];\n            for(var e in s)({}).hasOwnProperty.call(s, e) && (t[e] = s[e]);\n        }\n        return t;\n    }, _extends.apply(null, arguments);\n}\nclass ElasticCollision {\n    initialConditions(t, i) {\n        let s = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ()=>{};\n        this.container = i, this.dimensions = t.map((t)=>{\n            if (!t) return [\n                0,\n                0\n            ];\n            const { rect: i } = t;\n            return [\n                i.width / 2,\n                i.height / 2\n            ];\n        }), s(this), this.positions.forEach((i, s)=>{\n            var _t_s;\n            this.hash[s] = Math.floor(this.gridSize * (i[0] / this.container.width)) + Math.floor(this.gridSize * (i[1] / this.container.height)) * this.gridSize, this.setPosition((_t_s = t[s]) === null || _t_s === void 0 ? void 0 : _t_s.element, {\n                x: i[0],\n                y: i[1]\n            });\n        });\n    }\n    polarCoordinates(t) {\n        return {\n            speed: Math.sqrt(t[0] * t[0] + t[1] * t[1]),\n            angle: Math.atan2(t[1], t[0])\n        };\n    }\n    cartesianCoordinates(t, i) {\n        return [\n            t * Math.cos(i),\n            t * Math.sin(i)\n        ];\n    }\n    hasBounced(t) {\n        return this.bounced[t] += 1;\n    }\n    setPosition(t, param) {\n        let { x: i = 0, y: s = 0, z: e = 0 } = param;\n        t && (t.style.cssText = \"transform: translate3d(\".concat(i, \"px, \").concat(s, \"px, \").concat(e, \"px);\"));\n    }\n    rigidBorders(t) {\n        if (\"rigid\" === this.calculateBorders) for(let i = 0; i < t.length; i++){\n            const t = this.dimensions[i];\n            let s = this.velocities[i], e = this.positions[i];\n            e[1] < t[1] + this.container.height * this.containerOffsets.top && (this.hasBounced(i), this.velocities[i][1] = -s[1], this.positions[i][1] = t[1] + this.container.height * this.containerOffsets.top), e[0] < t[0] + this.container.width * this.containerOffsets.left && (this.hasBounced(i), this.velocities[i][0] = -s[0], this.positions[i][0] = t[0] + this.container.width * this.containerOffsets.left), e[1] > this.container.height * (this.containerOffsets.bottom + 1) - t[1] && (this.hasBounced(i), this.velocities[i][1] = -s[1], this.positions[i][1] = this.container.height * (this.containerOffsets.bottom + 1) - t[1]), e[0] > this.container.width * (this.containerOffsets.right + 1) - t[0] && (this.hasBounced(i), this.velocities[i][0] = -s[0], this.positions[i][0] = this.container.width * (this.containerOffsets.right + 1) - t[0]);\n        }\n    }\n    periodicBorders(t) {\n        if (\"periodic\" === this.calculateBorders) for(let i = 0; i < t.length; i++){\n            const t = this.dimensions[i];\n            let s = this.positions[i], e = this.velocities[i].map((t)=>Math.sign(t));\n            -1 === e[1] && s[1] < t[1] + this.container.height * this.containerOffsets.top && (this.positions[i][1] = t[1] + this.container.height * this.containerOffsets.bottom), 1 === e[1] && s[1] > this.container.height * this.containerOffsets.bottom - t[1] && (this.positions[i][1] = this.container.height * this.containerOffsets.top - t[1]), -1 === e[0] && s[0] < t[0] + this.container.width * this.containerOffsets.left && (this.positions[i][0] = t[0] + this.container.width * this.containerOffsets.right), 1 === e[0] && s[0] > this.container.width * this.containerOffsets.right - t[0] && (this.positions[i][0] = this.container.width * this.containerOffsets.left - t[0]);\n        }\n    }\n    isNeighboor(t, i) {\n        const s = this.hash[i];\n        let e = this.hash[t], o = !1;\n        for(let t = -1; t < 2; t++)for(let i = -1; i < 2; i++){\n            let n = e + this.gridSize * t + i;\n            if (!(n < 0 || n > this.gridSize * this.gridSize) && n === s) {\n                o = !0;\n                break;\n            }\n        }\n        return o;\n    }\n    axisAlignedBoundaryBoxes(t, i) {\n        const s = this.dimensions[t], e = this.positions[t], o = this.dimensions[i], n = this.positions[i];\n        return e.map((t, i)=>Math.abs(t - n[i]) < s[i] + o[i]).every((t)=>t);\n    }\n    calculateSuperposition(t, i) {\n        let s = [\n            0,\n            0\n        ];\n        const e = this.positions[t], o = this.dimensions[t], n = this.positions[i], r = this.dimensions[i], h = e.map((t, i)=>o[i] + r[i] - Math.abs(t - n[i]));\n        return h[0] < h[1] ? e[0] < n[0] ? s[0] = h[0] : s[0] = -h[0] : e[1] < n[1] ? s[1] = h[1] : s[1] = -h[1], s.map((t)=>t + Math.random() * this.collisionRandomness);\n    }\n    collisions(t) {\n        if (this.calculatecCollisions) {\n            this.collisionsList = [];\n            for(let i = 0; i < t.length; i++){\n                let t = this.velocities[i];\n                this.hash.forEach((s, e)=>{\n                    if (e === i) return;\n                    let o = this.velocities[e];\n                    if (this.collisionsList.some((param)=>{\n                        let { loop: t, inHash: s } = param;\n                        return t === e && s === i;\n                    })) return;\n                    if (!this.isNeighboor(i, e)) return;\n                    if (!this.axisAlignedBoundaryBoxes(i, e)) return;\n                    this.collisionsList.push({\n                        loop: i,\n                        inHash: e\n                    });\n                    const n = .5 * (t.reduce((t, i)=>t + i * i, 0) + o.reduce((t, i)=>t + i * i, 0)), r = this.calculateSuperposition(i, e);\n                    let h = t.map((t, i)=>t + r[i]), a = o.map((t, i)=>t - r[i]);\n                    const c = .5 * (h.reduce((t, i)=>t + i * i, 0) + a.reduce((t, i)=>t + i * i, 0));\n                    if (0 !== c) {\n                        const t = Math.sqrt(n / c);\n                        h = h.map((i)=>i * t), a = a.map((i)=>i * t);\n                    }\n                    this.velocities[i] = a, this.velocities[e] = h;\n                });\n            }\n        }\n    }\n    update(t, i) {\n        this.rigidBorders(t), this.periodicBorders(t), this.collisions(t), i(this), this.positions.forEach((t, i)=>{\n            this.hash[i] = Math.floor(this.gridSize * t[0] / this.container.width) + Math.floor(this.gridSize * t[1] / this.container.height) * this.gridSize;\n        });\n    }\n    constructor({ gridSize: t = 4, containerOffsets: i = {\n        top: 0,\n        bottom: 1,\n        left: 0,\n        right: 1\n    }, collisions: s = !0, borders: e = \"rigid\", collisionRandomness: o = 0 } = {}){\n        this.calculatecCollisions = s, this.calculateBorders = e, this.collisionRandomness = o, this.gridSize = t, this.containerOffsets = i, this.positions = [], this.velocities = [], this.dimensions = [], this.bounced = [], this.hash = [], this.container = {}, this.collisionsList = [];\n    }\n}\nconst l = {\n    random: function randominitialConditions(param) {\n        let { boxes: t, positions: i, velocities: s, container: e } = param;\n        t.forEach((t, o)=>{\n            i[o] = [\n                Math.random() * e.width,\n                Math.random() * e.height\n            ], s[o] = [\n                .5 * (Math.random() - .5),\n                .5 * (Math.random() - .5)\n            ];\n        });\n    }\n};\nconst d = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({});\nfunction useElasticCollision() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(d);\n}\nfunction ReactElasticCollision(param) {\n    let { children: s, className: o, config: c = {\n        gridSize: 8,\n        collisions: !1,\n        borders: \"rigid\",\n        containerOffsets: {\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0\n        }\n    }, presets: f = {\n        initialConditions: null,\n        update: null\n    }, initialConditions: u = ()=>{}, update: p = ()=>{} } = param;\n    const m = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map), [g, v] = (0,_darkroom_engineering_hamo__WEBPACK_IMPORTED_MODULE_1__.useRect)(), [x] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>new ElasticCollision(c)), S = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((t, i)=>{\n        m.current.set(t, i);\n    }, []), B = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((t)=>{\n        m.current.delete(t);\n    }, []);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let t = u;\n        const i = [\n            ...m.current.values()\n        ];\n        if (!function isEmptyArray(t) {\n            return !t || Array.isArray(t) && 0 === t.length;\n        }(i) && !i.some((param)=>{\n            let { rect: t } = param;\n            return !t;\n        })) {\n            if (f.initialConditions && (t = l[f.initialConditions], !t)) throw t = l.random, new Error(\"No setup preset found for \".concat(f.initialConditions, \" defaulting to random\"));\n            x.initialConditions(i, v, (s)=>t({\n                    boxes: i,\n                    ...s\n                }));\n        }\n    }, [\n        x,\n        v,\n        u\n    ]), (0,_darkroom_engineering_hamo__WEBPACK_IMPORTED_MODULE_1__.useFrame)((t, i)=>{\n        const s = [\n            ...m.current.values()\n        ];\n        x.update(s, (t)=>{\n            p({\n                boxes: s,\n                ...t,\n                deltaTime: i\n            }), s.forEach((i, s)=>{\n                const e = t.positions[s], o = t.dimensions[s];\n                t === null || t === void 0 ? void 0 : t.setPosition(i === null || i === void 0 ? void 0 : i.element, {\n                    x: e[0] - o[0],\n                    y: e[1]\n                });\n            });\n        });\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: o,\n        ref: g,\n        style: {\n            position: \"relative\",\n            width: \"100%\",\n            height: \"100%\"\n        }\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(d.Provider, {\n        value: {\n            addBox: S,\n            removeBox: B\n        }\n    }, s));\n}\n_c = ReactElasticCollision;\nfunction CollisionBox(param) {\n    let { className: i, children: o, onDragStop: r = ()=>{}, ...h } = param;\n    _s();\n    const { addBox: c, removeBox: l } = useElasticCollision(), [d, f] = (0,_darkroom_engineering_hamo__WEBPACK_IMPORTED_MODULE_1__.useRect)(), u = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (u.current) return c(u.current, {\n            element: u.current,\n            rect: f\n        }), ()=>{\n            l(u.current);\n        };\n    }, [\n        f,\n        c,\n        l\n    ]);\n    const p = (0,_use_gesture_react__WEBPACK_IMPORTED_MODULE_2__.useDrag)((param)=>{\n        let { down: t, movement: [i, s] } = param;\n        t && r([\n            i,\n            s\n        ]);\n    });\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", _extends({\n        ref: (t)=>{\n            u.current = t, d(t);\n        },\n        className: i\n    }, h), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", p(), o));\n}\n_s(CollisionBox, \"6CmlvcLHWPJxczwlJYyGQTZayS0=\", false, function() {\n    return [\n        useElasticCollision,\n        useElasticCollision,\n        useElasticCollision\n    ];\n});\n_c1 = CollisionBox;\n //# sourceMappingURL=elastic-collisions-react.mjs.map\nvar _c, _c1;\n$RefreshReg$(_c, \"ReactElasticCollision\");\n$RefreshReg$(_c1, \"CollisionBox\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../packages/react/dist/elastic-collisions-react.mjs\n"));

/***/ })

});