"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(pages)/home/page",{

/***/ "(app-pages-browser)/../packages/react/dist/elastic-collisions-react.mjs":
/*!***********************************************************!*\
  !*** ../packages/react/dist/elastic-collisions-react.mjs ***!
  \***********************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CollisionBox: function() { return /* binding */ CollisionBox; },\n/* harmony export */   \"default\": function() { return /* binding */ ReactElasticCollision; },\n/* harmony export */   initalConditionsPresets: function() { return /* binding */ l; },\n/* harmony export */   updatePresets: function() { return /* binding */ d; },\n/* harmony export */   useElasticCollision: function() { return /* binding */ useElasticCollision; }\n/* harmony export */ });\n/* harmony import */ var _darkroom_engineering_hamo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @darkroom.engineering/hamo */ \"(app-pages-browser)/../node_modules/.pnpm/@darkroom.engineering+hamo@0.6.45_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@darkroom.engineering/hamo/dist/hamo.modern.mjs\");\n/* harmony import */ var _use_gesture_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @use-gesture/react */ \"(app-pages-browser)/../node_modules/.pnpm/@use-gesture+react@10.3.1_react@18.3.1/node_modules/@use-gesture/react/dist/use-gesture-react.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.4_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1_sass@1.77.8/node_modules/next/dist/compiled/react/index.js\");\nvar _s = $RefreshSig$();\n\n\n\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(i) {\n        for(var t = 1; t < arguments.length; t++){\n            var s = arguments[t];\n            for(var e in s)({}).hasOwnProperty.call(s, e) && (i[e] = s[e]);\n        }\n        return i;\n    }, _extends.apply(null, arguments);\n}\nclass ElasticCollision {\n    initialConditions(i, t) {\n        let s = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ()=>{};\n        this.container = t, this.dimensions = i.map((i, t)=>{\n            if (!i) return [\n                0,\n                0\n            ];\n            this.externalForces[t] = [\n                0,\n                0\n            ];\n            const { rect: s } = i;\n            return [\n                s.width / 2,\n                s.height / 2\n            ];\n        }), s(this), this.positions.forEach((t, s)=>{\n            var _i_s;\n            this.hash[s] = Math.floor(this.gridSize * (t[0] / this.container.width)) + Math.floor(this.gridSize * (t[1] / this.container.height)) * this.gridSize, this.setPosition((_i_s = i[s]) === null || _i_s === void 0 ? void 0 : _i_s.element, {\n                x: t[0],\n                y: t[1]\n            });\n        });\n    }\n    polarCoordinates(i) {\n        return {\n            speed: Math.sqrt(i[0] * i[0] + i[1] * i[1]),\n            angle: Math.atan2(i[1], i[0])\n        };\n    }\n    cartesianCoordinates(i, t) {\n        return [\n            i * Math.cos(t),\n            i * Math.sin(t)\n        ];\n    }\n    hasBounced(i) {\n        return this.bounced[i] += 1;\n    }\n    setPosition(i, param) {\n        let { x: t = 0, y: s = 0, z: e = 0 } = param;\n        i && (i.style.cssText = \"transform: translate3d(\".concat(t, \"px, \").concat(s, \"px, \").concat(e, \"px);\"));\n    }\n    rigidBorders(i) {\n        if (\"rigid\" === this.calculateBorders) for(let t = 0; t < i.length; t++){\n            const i = this.dimensions[t];\n            let s = this.velocities[t], e = this.positions[t];\n            e[1] < i[1] + this.container.height * this.containerOffsets.top && (this.hasBounced(t), this.velocities[t][1] = -s[1], this.positions[t][1] = i[1] + this.container.height * this.containerOffsets.top), e[0] < i[0] + this.container.width * this.containerOffsets.left && (this.hasBounced(t), this.velocities[t][0] = -s[0], this.positions[t][0] = i[0] + this.container.width * this.containerOffsets.left), e[1] > this.container.height * (this.containerOffsets.bottom + 1) - i[1] && (this.hasBounced(t), this.velocities[t][1] = -s[1], this.positions[t][1] = this.container.height * (this.containerOffsets.bottom + 1) - i[1]), e[0] > this.container.width * (this.containerOffsets.right + 1) - i[0] && (this.hasBounced(t), this.velocities[t][0] = -s[0], this.positions[t][0] = this.container.width * (this.containerOffsets.right + 1) - i[0]);\n        }\n    }\n    periodicBorders(i) {\n        if (\"periodic\" === this.calculateBorders) for(let t = 0; t < i.length; t++){\n            const i = this.dimensions[t];\n            let s = this.positions[t], e = this.velocities[t].map((i)=>Math.sign(i));\n            -1 === e[1] && s[1] < i[1] + this.container.height * this.containerOffsets.top && (this.positions[t][1] = i[1] + this.container.height * this.containerOffsets.bottom), 1 === e[1] && s[1] > this.container.height * this.containerOffsets.bottom - i[1] && (this.positions[t][1] = this.container.height * this.containerOffsets.top - i[1]), -1 === e[0] && s[0] < i[0] + this.container.width * this.containerOffsets.left && (this.positions[t][0] = i[0] + this.container.width * this.containerOffsets.right), 1 === e[0] && s[0] > this.container.width * this.containerOffsets.right - i[0] && (this.positions[t][0] = this.container.width * this.containerOffsets.left - i[0]);\n        }\n    }\n    isNeighboor(i, t) {\n        const s = this.hash[t];\n        let e = this.hash[i], o = !1;\n        for(let i = -1; i < 2; i++)for(let t = -1; t < 2; t++){\n            let n = e + this.gridSize * i + t;\n            if (!(n < 0 || n > this.gridSize * this.gridSize) && n === s) {\n                o = !0;\n                break;\n            }\n        }\n        return o;\n    }\n    axisAlignedBoundaryBoxes(i, t) {\n        const s = this.dimensions[i], e = this.positions[i], o = this.dimensions[t], n = this.positions[t];\n        return e.map((i, t)=>Math.abs(i - n[t]) < s[t] + o[t]).every((i)=>i);\n    }\n    calculateSuperposition(i, t) {\n        let s = [\n            0,\n            0\n        ];\n        const e = this.positions[i], o = this.dimensions[i], n = this.positions[t], r = this.dimensions[t], h = e.map((i, t)=>o[t] + r[t] - Math.abs(i - n[t]));\n        return h[0] < h[1] ? e[0] < n[0] ? s[0] = h[0] : s[0] = -h[0] : e[1] < n[1] ? s[1] = h[1] : s[1] = -h[1], s.map((i)=>i + Math.random() * this.collisionRandomness);\n    }\n    collisions(i) {\n        if (this.calculatecCollisions) {\n            this.collisionsList = [];\n            for(let t = 0; t < i.length; t++){\n                let i = this.velocities[t];\n                this.hash.forEach((s, e)=>{\n                    if (e === t) return;\n                    let o = this.velocities[e];\n                    if (this.collisionsList.some((param)=>{\n                        let { loop: i, inHash: s } = param;\n                        return i === e && s === t;\n                    })) return;\n                    if (!this.isNeighboor(t, e)) return;\n                    if (!this.axisAlignedBoundaryBoxes(t, e)) return;\n                    this.collisionsList.push({\n                        loop: t,\n                        inHash: e\n                    });\n                    const n = .5 * (i.reduce((i, t)=>i + t * t, 0) + o.reduce((i, t)=>i + t * t, 0)), r = this.calculateSuperposition(t, e);\n                    let h = i.map((i, t)=>i + r[t]), a = o.map((i, t)=>i - r[t]);\n                    const c = .5 * (h.reduce((i, t)=>i + t * t, 0) + a.reduce((i, t)=>i + t * t, 0));\n                    if (0 !== c) {\n                        const i = Math.sqrt(n / c);\n                        h = h.map((t)=>t * i), a = a.map((t)=>t * i);\n                    }\n                    this.velocities[t] = a, this.velocities[e] = h;\n                });\n            }\n        }\n    }\n    update(i, t) {\n        this.rigidBorders(i), this.periodicBorders(i), this.collisions(i), t(this), this.positions.forEach((i, t)=>{\n            this.hash[t] = Math.floor(this.gridSize * i[0] / this.container.width) + Math.floor(this.gridSize * i[1] / this.container.height) * this.gridSize;\n        });\n    }\n    constructor({ gridSize: i = 4, containerOffsets: t = {\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0\n    }, collisions: s = !0, borders: e = \"rigid\", collisionRandomness: o = 0 } = {}){\n        this.calculatecCollisions = s, this.calculateBorders = e, this.collisionRandomness = o, this.gridSize = i, this.containerOffsets = t, this.positions = [], this.velocities = [], this.externalForces = [], this.dimensions = [], this.bounced = [], this.hash = [], this.container = {}, this.collisionsList = [];\n    }\n}\nconst l = {\n    random: function randomInitialConditions(param) {\n        let { boxes: i, positions: t, velocities: s, container: e } = param;\n        i.forEach((i, o)=>{\n            t[o] = [\n                Math.random() * e.width,\n                Math.random() * e.height\n            ], s[o] = [\n                .5 * (Math.random() - .5),\n                .5 * (Math.random() - .5)\n            ];\n        });\n    }\n};\nconst d = {\n    dvdAnimation: function dvdAnimation(param) {\n        let { boxes: i, positions: t, velocities: s, deltaTime: e } = param;\n        i.forEach((i, o)=>{\n            const n = s[o], r = t[o];\n            t[o] = r.map((i, t)=>i + n[t] * e);\n        });\n    },\n    DragAndGravity: function DragAndGravity(param) {\n        let { boxes: i, positions: t, velocities: s, deltaTime: e, externalForces: o } = param;\n        i.forEach((i, n)=>{\n            let r = s[n], h = t[n], a = o[n];\n            const c = [\n                0,\n                -.1\n            ];\n            r = r.map((i, t)=>i + -.001 * e * (i - 4 * a[t] + c[t])), h = h.map((i, t)=>i + r[t] * e), t[n] = h, s[n] = r, o[n] = [\n                0,\n                0\n            ];\n        });\n    }\n};\nconst f = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({});\nfunction useElasticCollision() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(f);\n}\nfunction ReactElasticCollision(param) {\n    let { children: s, className: o, config: c = {\n        gridSize: 8,\n        collisions: !0,\n        borders: \"rigid\",\n        containerOffsets: {\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0\n        }\n    }, initialConditions: l = ()=>{}, update: d = ()=>{} } = param;\n    const u = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map), [m, p] = (0,_darkroom_engineering_hamo__WEBPACK_IMPORTED_MODULE_1__.useRect)(), [g] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>new ElasticCollision(c)), v = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((i, t)=>{\n        u.current.set(i, t);\n    }, []), x = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((i)=>{\n        u.current.delete(i);\n    }, []);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const i = [\n            ...u.current.values()\n        ];\n        (function isEmptyArray(i) {\n            return !i || Array.isArray(i) && 0 === i.length;\n        })(i) || i.some((param)=>{\n            let { rect: i } = param;\n            return !i;\n        }) || g.initialConditions(i, p, (t)=>l({\n                boxes: i,\n                ...t\n            }));\n    }, [\n        g,\n        p\n    ]), (0,_darkroom_engineering_hamo__WEBPACK_IMPORTED_MODULE_1__.useFrame)((i, t)=>{\n        const s = [\n            ...u.current.values()\n        ];\n        g.update(s, (i)=>{\n            d({\n                boxes: s,\n                ...i,\n                deltaTime: t\n            }), s.forEach((t, s)=>{\n                const e = i.positions[s], o = i.dimensions[s];\n                i === null || i === void 0 ? void 0 : i.setPosition(t === null || t === void 0 ? void 0 : t.element, {\n                    x: e[0] - o[0],\n                    y: e[1]\n                });\n            });\n        });\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: o,\n        ref: m,\n        style: {\n            position: \"relative\",\n            width: \"100%\",\n            height: \"100%\"\n        }\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(f.Provider, {\n        value: {\n            addBox: v,\n            removeBox: x,\n            elasticCollision: g\n        }\n    }, s));\n}\n_c = ReactElasticCollision;\nfunction CollisionBox(param) {\n    let { className: t, children: o, onDragStop: r = null, ...h } = param;\n    _s();\n    const { addBox: c, removeBox: l, elasticCollision: d } = useElasticCollision(), [f, u] = (0,_darkroom_engineering_hamo__WEBPACK_IMPORTED_MODULE_1__.useRect)(), m = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (m.current) return c(m.current, {\n            element: m.current,\n            rect: u\n        }), ()=>{\n            l(m.current);\n        };\n    }, [\n        u,\n        c,\n        l\n    ]);\n    const p = (0,_use_gesture_react__WEBPACK_IMPORTED_MODULE_2__.useDrag)((param)=>{\n        let { down: i, movement: [t, s] } = param;\n        i && (r ? r([\n            t,\n            s\n        ]) : dragForcePresetsLib.default([\n            t,\n            s\n        ]));\n    });\n    return console.log(d), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", _extends({\n        ref: (i)=>{\n            m.current = i, f(i);\n        },\n        className: t\n    }, h), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", p(), o));\n}\n_s(CollisionBox, \"bWq7gaiH3AfCKAlJ3zP2ZHbt/a8=\", false, function() {\n    return [\n        useElasticCollision,\n        useElasticCollision,\n        useElasticCollision\n    ];\n});\n_c1 = CollisionBox;\n //# sourceMappingURL=elastic-collisions-react.mjs.map\nvar _c, _c1;\n$RefreshReg$(_c, \"ReactElasticCollision\");\n$RefreshReg$(_c1, \"CollisionBox\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi9wYWNrYWdlcy9yZWFjdC9kaXN0L2VsYXN0aWMtY29sbGlzaW9ucy1yZWFjdC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsTUFBTUE7SUFBeWFDLGtCQUFrQkMsQ0FBQUEsRUFBRUMsQ0FBQUEsRUFBSTtZQUFGQyxJQUFBQSxpRUFBRTtRQUFRQyxJQUFBQSxDQUFLQyxTQUFBQSxHQUFVSCxHQUFFRSxJQUFBQSxDQUFLRSxVQUFBQSxHQUFXTCxFQUFFTSxHQUFBQSxDQUFLLENBQUNOLEdBQUVDO1lBQUssS0FBSUQsR0FBRSxPQUFNO2dCQUFDO2dCQUFFO2FBQUE7WUFBR0csSUFBQUEsQ0FBS0ksY0FBQUEsQ0FBZU4sRUFBQUEsR0FBRztnQkFBQztnQkFBRTthQUFBO1lBQUcsUUFBTU8sTUFBS04sQ0FBQUEsRUFBQUEsR0FBR0Y7WUFBRSxPQUFNO2dCQUFDRSxFQUFFTyxLQUFBQSxHQUFNO2dCQUFFUCxFQUFFUSxNQUFBQSxHQUFPO2FBQUc7UUFBQSxJQUFHUixFQUFFQyxJQUFBQSxHQUFNQSxJQUFBQSxDQUFLUSxTQUFBQSxDQUFVQyxPQUFBQSxDQUFPLENBQUdYLEdBQUVDO2dCQUE4SkY7WUFBekpHLElBQUFBLENBQUtVLElBQUFBLENBQUtYLEVBQUFBLEdBQUdZLEtBQUtDLEtBQUFBLENBQU1aLElBQUFBLENBQUthLFFBQUFBLEdBQVVmLENBQUFBLENBQUFBLENBQUUsS0FBR0UsSUFBQUEsQ0FBS0MsU0FBQUEsQ0FBVUssS0FBQUEsS0FBUUssS0FBS0MsS0FBQUEsQ0FBTVosSUFBQUEsQ0FBS2EsUUFBQUEsR0FBVWYsQ0FBQUEsQ0FBQUEsQ0FBRSxLQUFHRSxJQUFBQSxDQUFLQyxTQUFBQSxDQUFVTSxNQUFBQSxLQUFTUCxJQUFBQSxDQUFLYSxRQUFBQSxFQUFTYixJQUFBQSxDQUFLYyxXQUFBQSxFQUFZakIsT0FBQUEsQ0FBQUEsQ0FBRUUsRUFBQUEsY0FBRkYsMkJBQUFBLEtBQU1r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RkEsRUFBVztZQUFDTztZQUFJQztTQUFBQSxJQUVoQkMsb0JBQW9CQyxPQUFBQSxDQUFRO1lBQUNIO1lBQUlDO1NBQUFBLENBQUFBO0lBRXJDO0lBS0YsT0FGQUcsUUFBUUMsR0FBQUEsQ0FBSXJDLGtCQUdWa0IsZ0RBQUFDLENBQUEsT0FBQW1CLFNBQUE7UUFDRWxCLEtBQU1tQixDQUFBQTtZQUNKWixFQUFXdEIsT0FBQUEsR0FBVWtDLEdBQ3JCYixFQUFXYTtRQUFLO1FBRWxCL0MsV0FBV0E7SUFBQUEsR0FDUGdDLGtCQUVKTixnREFBQUMsQ0FBQSxPQUFTUyxLQUFTckM7QUFHeEI7R0ExQ1NnQzs7UUFDeUNuQztRQUFBQTtRQUFBQTs7O01BRHpDbUM7QUEwQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL2VuZ2luZS9kaXN0L2VsYXN0aWMtY29sbGlzaW9ucy5tanM/NDA5MCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmVzZXRzLmpzP2FjMDIiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvaW5kZXguanM/NWE2MCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy91dGlscy5qcz9hY2UwIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEVsYXN0aWNDb2xsaXNpb257Y29uc3RydWN0b3Ioe2dyaWRTaXplOmk9NCxjb250YWluZXJPZmZzZXRzOnQ9e3RvcDowLGJvdHRvbTowLGxlZnQ6MCxyaWdodDowfSxjb2xsaXNpb25zOnM9ITAsYm9yZGVyczpvPVwicmlnaWRcIixjb2xsaXNpb25SYW5kb21uZXNzOmU9MH09e30pe3RoaXMuY2FsY3VsYXRlY0NvbGxpc2lvbnM9cyx0aGlzLmNhbGN1bGF0ZUJvcmRlcnM9byx0aGlzLmNvbGxpc2lvblJhbmRvbW5lc3M9ZSx0aGlzLmdyaWRTaXplPWksdGhpcy5jb250YWluZXJPZmZzZXRzPXQsdGhpcy5wb3NpdGlvbnM9W10sdGhpcy52ZWxvY2l0aWVzPVtdLHRoaXMuZXh0ZXJuYWxGb3JjZXM9W10sdGhpcy5kaW1lbnNpb25zPVtdLHRoaXMuYm91bmNlZD1bXSx0aGlzLmhhc2g9W10sdGhpcy5jb250YWluZXI9e30sdGhpcy5jb2xsaXNpb25zTGlzdD1bXX1pbml0aWFsQ29uZGl0aW9ucyhpLHQscz0oKT0+e30pe3RoaXMuY29udGFpbmVyPXQsdGhpcy5kaW1lbnNpb25zPWkubWFwKCgoaSx0KT0+e2lmKCFpKXJldHVyblswLDBdO3RoaXMuZXh0ZXJuYWxGb3JjZXNbdF09WzAsMF07Y29uc3R7cmVjdDpzfT1pO3JldHVybltzLndpZHRoLzIscy5oZWlnaHQvMl19KSkscyh0aGlzKSx0aGlzLnBvc2l0aW9ucy5mb3JFYWNoKCgodCxzKT0+e3RoaXMuaGFzaFtzXT1NYXRoLmZsb29yKHRoaXMuZ3JpZFNpemUqKHRbMF0vdGhpcy5jb250YWluZXIud2lkdGgpKStNYXRoLmZsb29yKHRoaXMuZ3JpZFNpemUqKHRbMV0vdGhpcy5jb250YWluZXIuaGVpZ2h0KSkqdGhpcy5ncmlkU2l6ZSx0aGlzLnNldFBvc2l0aW9uKGlbc10/LmVsZW1lbnQse3g6dFswXSx5OnRbMV19KX0pKX1wb2xhckNvb3JkaW5hdGVzKGkpe3JldHVybntzcGVlZDpNYXRoLnNxcnQoaVswXSppWzBdK2lbMV0qaVsxXSksYW5nbGU6TWF0aC5hdGFuMihpWzFdLGlbMF0pfX1jYXJ0ZXNpYW5Db29yZGluYXRlcyhpLHQpe3JldHVybltpKk1hdGguY29zKHQpLGkqTWF0aC5zaW4odCldfWhhc0JvdW5jZWQoaSl7cmV0dXJuIHRoaXMuYm91bmNlZFtpXSs9MX1zZXRQb3NpdGlvbihpLHt4OnQ9MCx5OnM9MCx6Om89MH0pe2kmJihpLnN0eWxlLmNzc1RleHQ9YHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoJHt0fXB4LCAke3N9cHgsICR7b31weCk7YCl9cmlnaWRCb3JkZXJzKGkpe2lmKFwicmlnaWRcIj09PXRoaXMuY2FsY3VsYXRlQm9yZGVycylmb3IobGV0IHQ9MDt0PGkubGVuZ3RoO3QrKyl7Y29uc3QgaT10aGlzLmRpbWVuc2lvbnNbdF07bGV0IHM9dGhpcy52ZWxvY2l0aWVzW3RdLG89dGhpcy5wb3NpdGlvbnNbdF07b1sxXTxpWzFdK3RoaXMuY29udGFpbmVyLmhlaWdodCp0aGlzLmNvbnRhaW5lck9mZnNldHMudG9wJiYodGhpcy5oYXNCb3VuY2VkKHQpLHRoaXMudmVsb2NpdGllc1t0XVsxXT0tc1sxXSx0aGlzLnBvc2l0aW9uc1t0XVsxXT1pWzFdK3RoaXMuY29udGFpbmVyLmhlaWdodCp0aGlzLmNvbnRhaW5lck9mZnNldHMudG9wKSxvWzBdPGlbMF0rdGhpcy5jb250YWluZXIud2lkdGgqdGhpcy5jb250YWluZXJPZmZzZXRzLmxlZnQmJih0aGlzLmhhc0JvdW5jZWQodCksdGhpcy52ZWxvY2l0aWVzW3RdWzBdPS1zWzBdLHRoaXMucG9zaXRpb25zW3RdWzBdPWlbMF0rdGhpcy5jb250YWluZXIud2lkdGgqdGhpcy5jb250YWluZXJPZmZzZXRzLmxlZnQpLG9bMV0+dGhpcy5jb250YWluZXIuaGVpZ2h0Kih0aGlzLmNvbnRhaW5lck9mZnNldHMuYm90dG9tKzEpLWlbMV0mJih0aGlzLmhhc0JvdW5jZWQodCksdGhpcy52ZWxvY2l0aWVzW3RdWzFdPS1zWzFdLHRoaXMucG9zaXRpb25zW3RdWzFdPXRoaXMuY29udGFpbmVyLmhlaWdodCoodGhpcy5jb250YWluZXJPZmZzZXRzLmJvdHRvbSsxKS1pWzFdKSxvWzBdPnRoaXMuY29udGFpbmVyLndpZHRoKih0aGlzLmNvbnRhaW5lck9mZnNldHMucmlnaHQrMSktaVswXSYmKHRoaXMuaGFzQm91bmNlZCh0KSx0aGlzLnZlbG9jaXRpZXNbdF1bMF09LXNbMF0sdGhpcy5wb3NpdGlvbnNbdF1bMF09dGhpcy5jb250YWluZXIud2lkdGgqKHRoaXMuY29udGFpbmVyT2Zmc2V0cy5yaWdodCsxKS1pWzBdKX19cGVyaW9kaWNCb3JkZXJzKGkpe2lmKFwicGVyaW9kaWNcIj09PXRoaXMuY2FsY3VsYXRlQm9yZGVycylmb3IobGV0IHQ9MDt0PGkubGVuZ3RoO3QrKyl7Y29uc3QgaT10aGlzLmRpbWVuc2lvbnNbdF07bGV0IHM9dGhpcy5wb3NpdGlvbnNbdF0sbz10aGlzLnZlbG9jaXRpZXNbdF0ubWFwKChpPT5NYXRoLnNpZ24oaSkpKTstMT09PW9bMV0mJnNbMV08aVsxXSt0aGlzLmNvbnRhaW5lci5oZWlnaHQqdGhpcy5jb250YWluZXJPZmZzZXRzLnRvcCYmKHRoaXMucG9zaXRpb25zW3RdWzFdPWlbMV0rdGhpcy5jb250YWluZXIuaGVpZ2h0KnRoaXMuY29udGFpbmVyT2Zmc2V0cy5ib3R0b20pLDE9PT1vWzFdJiZzWzFdPnRoaXMuY29udGFpbmVyLmhlaWdodCp0aGlzLmNvbnRhaW5lck9mZnNldHMuYm90dG9tLWlbMV0mJih0aGlzLnBvc2l0aW9uc1t0XVsxXT10aGlzLmNvbnRhaW5lci5oZWlnaHQqdGhpcy5jb250YWluZXJPZmZzZXRzLnRvcC1pWzFdKSwtMT09PW9bMF0mJnNbMF08aVswXSt0aGlzLmNvbnRhaW5lci53aWR0aCp0aGlzLmNvbnRhaW5lck9mZnNldHMubGVmdCYmKHRoaXMucG9zaXRpb25zW3RdWzBdPWlbMF0rdGhpcy5jb250YWluZXIud2lkdGgqdGhpcy5jb250YWluZXJPZmZzZXRzLnJpZ2h0KSwxPT09b1swXSYmc1swXT50aGlzLmNvbnRhaW5lci53aWR0aCp0aGlzLmNvbnRhaW5lck9mZnNldHMucmlnaHQtaVswXSYmKHRoaXMucG9zaXRpb25zW3RdWzBdPXRoaXMuY29udGFpbmVyLndpZHRoKnRoaXMuY29udGFpbmVyT2Zmc2V0cy5sZWZ0LWlbMF0pfX1pc05laWdoYm9vcihpLHQpe2NvbnN0IHM9dGhpcy5oYXNoW3RdO2xldCBvPXRoaXMuaGFzaFtpXSxlPSExO2ZvcihsZXQgaT0tMTtpPDI7aSsrKWZvcihsZXQgdD0tMTt0PDI7dCsrKXtsZXQgaD1vK3RoaXMuZ3JpZFNpemUqaSt0O2lmKCEoaDwwfHxoPnRoaXMuZ3JpZFNpemUqdGhpcy5ncmlkU2l6ZSkmJmg9PT1zKXtlPSEwO2JyZWFrfX1yZXR1cm4gZX1heGlzQWxpZ25lZEJvdW5kYXJ5Qm94ZXMoaSx0KXtjb25zdCBzPXRoaXMuZGltZW5zaW9uc1tpXSxvPXRoaXMucG9zaXRpb25zW2ldLGU9dGhpcy5kaW1lbnNpb25zW3RdLGg9dGhpcy5wb3NpdGlvbnNbdF07cmV0dXJuIG8ubWFwKCgoaSx0KT0+TWF0aC5hYnMoaS1oW3RdKTxzW3RdK2VbdF0pKS5ldmVyeSgoaT0+aSkpfWNhbGN1bGF0ZVN1cGVycG9zaXRpb24oaSx0KXtsZXQgcz1bMCwwXTtjb25zdCBvPXRoaXMucG9zaXRpb25zW2ldLGU9dGhpcy5kaW1lbnNpb25zW2ldLGg9dGhpcy5wb3NpdGlvbnNbdF0sbj10aGlzLmRpbWVuc2lvbnNbdF0scj1vLm1hcCgoKGksdCk9PmVbdF0rblt0XS1NYXRoLmFicyhpLWhbdF0pKSk7cmV0dXJuIHJbMF08clsxXT9vWzBdPGhbMF0/c1swXT1yWzBdOnNbMF09LXJbMF06b1sxXTxoWzFdP3NbMV09clsxXTpzWzFdPS1yWzFdLHMubWFwKChpPT5pK01hdGgucmFuZG9tKCkqdGhpcy5jb2xsaXNpb25SYW5kb21uZXNzKSl9Y29sbGlzaW9ucyhpKXtpZih0aGlzLmNhbGN1bGF0ZWNDb2xsaXNpb25zKXt0aGlzLmNvbGxpc2lvbnNMaXN0PVtdO2ZvcihsZXQgdD0wO3Q8aS5sZW5ndGg7dCsrKXtsZXQgaT10aGlzLnZlbG9jaXRpZXNbdF07dGhpcy5oYXNoLmZvckVhY2goKChzLG8pPT57aWYobz09PXQpcmV0dXJuO2xldCBlPXRoaXMudmVsb2NpdGllc1tvXTtpZih0aGlzLmNvbGxpc2lvbnNMaXN0LnNvbWUoKCh7bG9vcDppLGluSGFzaDpzfSk9Pmk9PT1vJiZzPT09dCkpKXJldHVybjtpZighdGhpcy5pc05laWdoYm9vcih0LG8pKXJldHVybjtpZighdGhpcy5heGlzQWxpZ25lZEJvdW5kYXJ5Qm94ZXModCxvKSlyZXR1cm47dGhpcy5jb2xsaXNpb25zTGlzdC5wdXNoKHtsb29wOnQsaW5IYXNoOm99KTtjb25zdCBoPS41KihpLnJlZHVjZSgoKGksdCk9PmkrdCp0KSwwKStlLnJlZHVjZSgoKGksdCk9PmkrdCp0KSwwKSksbj10aGlzLmNhbGN1bGF0ZVN1cGVycG9zaXRpb24odCxvKTtsZXQgcj1pLm1hcCgoKGksdCk9Pmkrblt0XSkpLGE9ZS5tYXAoKChpLHQpPT5pLW5bdF0pKTtjb25zdCBjPS41KihyLnJlZHVjZSgoKGksdCk9PmkrdCp0KSwwKSthLnJlZHVjZSgoKGksdCk9PmkrdCp0KSwwKSk7aWYoMCE9PWMpe2NvbnN0IGk9TWF0aC5zcXJ0KGgvYyk7cj1yLm1hcCgodD0+dCppKSksYT1hLm1hcCgodD0+dCppKSl9dGhpcy52ZWxvY2l0aWVzW3RdPWEsdGhpcy52ZWxvY2l0aWVzW29dPXJ9KSl9fX11cGRhdGUoaSx0KXt0aGlzLnJpZ2lkQm9yZGVycyhpKSx0aGlzLnBlcmlvZGljQm9yZGVycyhpKSx0aGlzLmNvbGxpc2lvbnMoaSksdCh0aGlzKSx0aGlzLnBvc2l0aW9ucy5mb3JFYWNoKCgoaSx0KT0+e3RoaXMuaGFzaFt0XT1NYXRoLmZsb29yKHRoaXMuZ3JpZFNpemUqaVswXS90aGlzLmNvbnRhaW5lci53aWR0aCkrTWF0aC5mbG9vcih0aGlzLmdyaWRTaXplKmlbMV0vdGhpcy5jb250YWluZXIuaGVpZ2h0KSp0aGlzLmdyaWRTaXplfSkpfX1leHBvcnR7RWxhc3RpY0NvbGxpc2lvbiBhcyBkZWZhdWx0fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVsYXN0aWMtY29sbGlzaW9ucy5tanMubWFwXG4iLCJmdW5jdGlvbiByYW5kb21Jbml0aWFsQ29uZGl0aW9ucyh7IGJveGVzLCBwb3NpdGlvbnMsIHZlbG9jaXRpZXMsIGNvbnRhaW5lciB9KSB7XG4gIGJveGVzLmZvckVhY2goKF8sIGluZGV4KSA9PiB7XG4gICAgcG9zaXRpb25zW2luZGV4XSA9IFtcbiAgICAgIE1hdGgucmFuZG9tKCkgKiBjb250YWluZXIud2lkdGgsXG4gICAgICBNYXRoLnJhbmRvbSgpICogY29udGFpbmVyLmhlaWdodCxcbiAgICBdXG4gICAgdmVsb2NpdGllc1tpbmRleF0gPSBbXG4gICAgICAwLjUgKiAoTWF0aC5yYW5kb20oKSAtIDAuNSksXG4gICAgICAwLjUgKiAoTWF0aC5yYW5kb20oKSAtIDAuNSksXG4gICAgXVxuICB9KVxufVxuXG5leHBvcnQgY29uc3QgaW5pdGFsQ29uZGl0aW9uc1ByZXNldHMgPSB7XG4gIHJhbmRvbTogcmFuZG9tSW5pdGlhbENvbmRpdGlvbnMsXG59XG5cbmZ1bmN0aW9uIGR2ZEFuaW1hdGlvbih7IGJveGVzLCBwb3NpdGlvbnMsIHZlbG9jaXRpZXMsIGRlbHRhVGltZSB9KSB7XG4gIGJveGVzLmZvckVhY2goKF8sIGluZGV4KSA9PiB7XG4gICAgY29uc3QgdmVsb2NpdHkgPSB2ZWxvY2l0aWVzW2luZGV4XVxuICAgIGNvbnN0IHBvc2l0aW9uID0gcG9zaXRpb25zW2luZGV4XVxuXG4gICAgcG9zaXRpb25zW2luZGV4XSA9IHBvc2l0aW9uLm1hcCgocG9zLCBpKSA9PiBwb3MgKyB2ZWxvY2l0eVtpXSAqIGRlbHRhVGltZSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gRHJhZ0FuZEdyYXZpdHkoe1xuICBib3hlcyxcbiAgcG9zaXRpb25zLFxuICB2ZWxvY2l0aWVzLFxuICBkZWx0YVRpbWUsXG4gIGV4dGVybmFsRm9yY2VzLFxufSkge1xuICBib3hlcy5mb3JFYWNoKChfLCBpbmRleCkgPT4ge1xuICAgIGxldCB2ZWxvY2l0eSA9IHZlbG9jaXRpZXNbaW5kZXhdXG4gICAgbGV0IHBvc2l0aW9uID0gcG9zaXRpb25zW2luZGV4XVxuICAgIGxldCBkcmFnZ2luID0gZXh0ZXJuYWxGb3JjZXNbaW5kZXhdXG5cbiAgICBjb25zdCBmbG93ID0gWzAsIC0wLjFdXG5cbiAgICB2ZWxvY2l0eSA9IHZlbG9jaXR5Lm1hcChcbiAgICAgICh2LCBpKSA9PiB2ICsgZGVsdGFUaW1lICogLTAuMDAxICogKHYgLSA0ICogZHJhZ2dpbltpXSArIGZsb3dbaV0pXG4gICAgKVxuXG4gICAgcG9zaXRpb24gPSBwb3NpdGlvbi5tYXAoKHBvcywgaSkgPT4gcG9zICsgdmVsb2NpdHlbaV0gKiBkZWx0YVRpbWUpXG5cbiAgICBwb3NpdGlvbnNbaW5kZXhdID0gcG9zaXRpb25cbiAgICB2ZWxvY2l0aWVzW2luZGV4XSA9IHZlbG9jaXR5XG5cbiAgICBleHRlcm5hbEZvcmNlc1tpbmRleF0gPSBbMCwgMF1cbiAgfSlcbn1cblxuZXhwb3J0IGNvbnN0IHVwZGF0ZVByZXNldHMgPSB7XG4gIGR2ZEFuaW1hdGlvbixcbiAgRHJhZ0FuZEdyYXZpdHksXG59XG5cbmZ1bmN0aW9uIGRyYWdGb3JjZShuZXdEaXIpIHtcbiAgbGV0IG5vcm0gPSBuZXdEaXIubWFwKChwb3MpID0+IHBvcyAqIHBvcykucmVkdWNlKChhLCBiKSA9PiBhICsgYilcbiAgbm9ybSA9IE1hdGguc3FydChub3JtKVxuXG4gIGlmIChub3JtID09PSAwKSByZXR1cm5cbiAgZHJhZ1ZlbG9jaXR5LmN1cnJlbnRbaW5kZXhdID0gbmV3RGlyLm1hcCgocG9zKSA9PiBwb3MgLyBub3JtKVxufVxuXG5leHBvcnQgY29uc3QgZHJhZ0ZvcmNlUHJlc2V0c0xpYiA9IHtcbiAgZGVmYXVsdDogZHJhZ0ZvcmNlLFxufVxuIiwiaW1wb3J0IHsgdXNlRnJhbWUsIHVzZVJlY3QgfSBmcm9tICdAZGFya3Jvb20uZW5naW5lZXJpbmcvaGFtbydcbmltcG9ydCB7IHVzZURyYWcgfSBmcm9tICdAdXNlLWdlc3R1cmUvcmVhY3QnXG5pbXBvcnQgUmVhY3QsIHtcbiAgY3JlYXRlQ29udGV4dCxcbiAgdXNlQ2FsbGJhY2ssXG4gIHVzZUNvbnRleHQsXG4gIHVzZUVmZmVjdCxcbiAgdXNlUmVmLFxuICB1c2VTdGF0ZSxcbn0gZnJvbSAncmVhY3QnXG5pbXBvcnQgRWxhc3RpY0NvbGxpc2lvbiBmcm9tICcuLi8uLi9lbmdpbmUvZGlzdC9lbGFzdGljLWNvbGxpc2lvbnMubWpzJ1xuaW1wb3J0IHsgaW5pdGFsQ29uZGl0aW9uc1ByZXNldHMsIHVwZGF0ZVByZXNldHMgfSBmcm9tICcuL3ByZXNldHMnXG5pbXBvcnQgeyBpc0VtcHR5QXJyYXkgfSBmcm9tICcuL3V0aWxzJ1xuXG5jb25zdCBFbGFzdGljQ29sbGlzaW9uQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoe30pXG5cbmZ1bmN0aW9uIHVzZUVsYXN0aWNDb2xsaXNpb24oKSB7XG4gIHJldHVybiB1c2VDb250ZXh0KEVsYXN0aWNDb2xsaXNpb25Db250ZXh0KVxufVxuXG5mdW5jdGlvbiBSZWFjdEVsYXN0aWNDb2xsaXNpb24oe1xuICBjaGlsZHJlbixcbiAgY2xhc3NOYW1lLFxuICBjb25maWcgPSB7XG4gICAgZ3JpZFNpemU6IDgsXG4gICAgY29sbGlzaW9uczogdHJ1ZSxcbiAgICBib3JkZXJzOiAncmlnaWQnLFxuICAgIGNvbnRhaW5lck9mZnNldHM6IHtcbiAgICAgIHRvcDogMCxcbiAgICAgIGJvdHRvbTogMCxcbiAgICAgIGxlZnQ6IDAsXG4gICAgICByaWdodDogMCxcbiAgICB9LFxuICB9LFxuICBpbml0aWFsQ29uZGl0aW9ucyA9ICgpID0+IHt9LFxuICB1cGRhdGUgPSAoKSA9PiB7fSxcbn0pIHtcbiAgY29uc3QgYm94ZXNSZWZzID0gdXNlUmVmKG5ldyBNYXAoKSlcbiAgY29uc3QgW3NlY3Rpb25SZWN0UmVmLCBzZWN0aW9uUmVjdF0gPSB1c2VSZWN0KClcbiAgY29uc3QgW2VsYXN0aWNDb2xsaXNpb25dID0gdXNlU3RhdGUoKCkgPT4gbmV3IEVsYXN0aWNDb2xsaXNpb24oY29uZmlnKSlcblxuICBjb25zdCBhZGRCb3ggPSB1c2VDYWxsYmFjaygoZWxlbWVudCwgc2xpZGUpID0+IHtcbiAgICBib3hlc1JlZnMuY3VycmVudC5zZXQoZWxlbWVudCwgc2xpZGUpXG4gIH0sIFtdKVxuICBjb25zdCByZW1vdmVCb3ggPSB1c2VDYWxsYmFjaygoZWxlbWVudCkgPT4ge1xuICAgIGJveGVzUmVmcy5jdXJyZW50LmRlbGV0ZShlbGVtZW50KVxuICB9LCBbXSlcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGJveGVzID0gWy4uLmJveGVzUmVmcy5jdXJyZW50LnZhbHVlcygpXVxuXG4gICAgaWYgKGlzRW1wdHlBcnJheShib3hlcykgfHwgYm94ZXMuc29tZSgoeyByZWN0IH0pID0+ICFyZWN0KSkgcmV0dXJuXG5cbiAgICBlbGFzdGljQ29sbGlzaW9uLmluaXRpYWxDb25kaXRpb25zKGJveGVzLCBzZWN0aW9uUmVjdCwgKGluc3RhbmNlcykgPT5cbiAgICAgIGluaXRpYWxDb25kaXRpb25zKHsgYm94ZXMsIC4uLmluc3RhbmNlcyB9KVxuICAgIClcbiAgfSwgW2VsYXN0aWNDb2xsaXNpb24sIHNlY3Rpb25SZWN0XSlcblxuICB1c2VGcmFtZSgoXywgZGVsdGFUaW1lKSA9PiB7XG4gICAgY29uc3QgYm94ZXMgPSBbLi4uYm94ZXNSZWZzLmN1cnJlbnQudmFsdWVzKCldXG5cbiAgICBlbGFzdGljQ29sbGlzaW9uLnVwZGF0ZShib3hlcywgKGluc3RhbmNlKSA9PiB7XG4gICAgICB1cGRhdGUoeyBib3hlcywgLi4uaW5zdGFuY2UsIGRlbHRhVGltZSB9KVxuXG4gICAgICBib3hlcy5mb3JFYWNoKChlbGVtZW50LCBpbmRleCkgPT4ge1xuICAgICAgICBjb25zdCBwb3NpdGlvbiA9IGluc3RhbmNlLnBvc2l0aW9uc1tpbmRleF1cbiAgICAgICAgY29uc3QgZGltZW5zaW9ucyA9IGluc3RhbmNlLmRpbWVuc2lvbnNbaW5kZXhdXG5cbiAgICAgICAgaW5zdGFuY2U/LnNldFBvc2l0aW9uKGVsZW1lbnQ/LmVsZW1lbnQsIHtcbiAgICAgICAgICAvLyBzaGlmdCBjZW50ZXJzIGVsZW1lbnQgdG8gY2VudGVyIG9mIG1hc3NcbiAgICAgICAgICB4OiBwb3NpdGlvblswXSAtIGRpbWVuc2lvbnNbMF0sXG4gICAgICAgICAgeTogcG9zaXRpb25bMV0sXG4gICAgICAgIH0pXG4gICAgICB9KVxuICAgIH0pXG4gIH0pXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZX1cbiAgICAgIHJlZj17c2VjdGlvblJlY3RSZWZ9XG4gICAgICBzdHlsZT17eyBwb3NpdGlvbjogJ3JlbGF0aXZlJywgd2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAnMTAwJScgfX1cbiAgICA+XG4gICAgICA8RWxhc3RpY0NvbGxpc2lvbkNvbnRleHQuUHJvdmlkZXJcbiAgICAgICAgdmFsdWU9e3sgYWRkQm94LCByZW1vdmVCb3gsIGVsYXN0aWNDb2xsaXNpb24gfX1cbiAgICAgID5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9FbGFzdGljQ29sbGlzaW9uQ29udGV4dC5Qcm92aWRlcj5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5mdW5jdGlvbiBDb2xsaXNpb25Cb3goeyBjbGFzc05hbWUsIGNoaWxkcmVuLCBvbkRyYWdTdG9wID0gbnVsbCwgLi4ucHJvcHMgfSkge1xuICBjb25zdCB7IGFkZEJveCwgcmVtb3ZlQm94LCBlbGFzdGljQ29sbGlzaW9uIH0gPSB1c2VFbGFzdGljQ29sbGlzaW9uKClcbiAgY29uc3QgW3NldFJlY3RSZWYsIHJlY3RdID0gdXNlUmVjdCgpXG4gIGNvbnN0IGVsZW1lbnRSZWYgPSB1c2VSZWYoKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGVsZW1lbnRSZWYuY3VycmVudCkge1xuICAgICAgYWRkQm94KGVsZW1lbnRSZWYuY3VycmVudCwge1xuICAgICAgICBlbGVtZW50OiBlbGVtZW50UmVmLmN1cnJlbnQsXG4gICAgICAgIHJlY3QsXG4gICAgICB9KVxuXG4gICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICByZW1vdmVCb3goZWxlbWVudFJlZi5jdXJyZW50KVxuICAgICAgfVxuICAgIH1cbiAgfSwgW3JlY3QsIGFkZEJveCwgcmVtb3ZlQm94XSlcblxuICBjb25zdCBiaW5kID0gdXNlRHJhZygoeyBkb3duLCBtb3ZlbWVudDogW214LCBteV0gfSkgPT4ge1xuICAgIGlmIChkb3duKSB7XG4gICAgICBpZiAob25EcmFnU3RvcCkge1xuICAgICAgICBvbkRyYWdTdG9wKFtteCwgbXldKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZHJhZ0ZvcmNlUHJlc2V0c0xpYi5kZWZhdWx0KFtteCwgbXldKVxuICAgICAgfVxuICAgIH1cbiAgfSlcblxuICBjb25zb2xlLmxvZyhlbGFzdGljQ29sbGlzaW9uKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgcmVmPXsobm9kZSkgPT4ge1xuICAgICAgICBlbGVtZW50UmVmLmN1cnJlbnQgPSBub2RlXG4gICAgICAgIHNldFJlY3RSZWYobm9kZSlcbiAgICAgIH19XG4gICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICA+XG4gICAgICA8ZGl2IHsuLi5iaW5kKCl9PntjaGlsZHJlbn08L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBSZWFjdEVsYXN0aWNDb2xsaXNpb25cbmV4cG9ydCB7XG4gIENvbGxpc2lvbkJveCxcbiAgaW5pdGFsQ29uZGl0aW9uc1ByZXNldHMsXG4gIHVwZGF0ZVByZXNldHMsXG4gIHVzZUVsYXN0aWNDb2xsaXNpb24sXG59XG4iLCJleHBvcnQgZnVuY3Rpb24gaXNFbXB0eUFycmF5KGFycikge1xuICBpZiAoIWFycikgcmV0dXJuIHRydWVcblxuICByZXR1cm4gQXJyYXkuaXNBcnJheShhcnIpICYmIGFyci5sZW5ndGggPT09IDBcbn1cbiJdLCJuYW1lcyI6WyJFbGFzdGljQ29sbGlzaW9uIiwiaW5pdGlhbENvbmRpdGlvbnMiLCJpIiwidCIsInMiLCJ0aGlzIiwiY29udGFpbmVyIiwiZGltZW5zaW9ucyIsIm1hcCIsImV4dGVybmFsRm9yY2VzIiwicmVjdCIsIndpZHRoIiwiaGVpZ2h0IiwicG9zaXRpb25zIiwiZm9yRWFjaCIsImhhc2giLCJNYXRoIiwiZmxvb3IiLCJncmlkU2l6ZSIsInNldFBvc2l0aW9uIiwiZWxlbWVudCIsIngiLCJ5IiwicG9sYXJDb29yZGluYXRlcyIsInNwZWVkIiwic3FydCIsImFuZ2xlIiwiYXRhbjIiLCJjYXJ0ZXNpYW5Db29yZGluYXRlcyIsImNvcyIsInNpbiIsImhhc0JvdW5jZWQiLCJib3VuY2VkIiwieiIsIm8iLCJzdHlsZSIsImNzc1RleHQiLCJyaWdpZEJvcmRlcnMiLCJjYWxjdWxhdGVCb3JkZXJzIiwibGVuZ3RoIiwidmVsb2NpdGllcyIsImNvbnRhaW5lck9mZnNldHMiLCJ0b3AiLCJsZWZ0IiwiYm90dG9tIiwicmlnaHQiLCJwZXJpb2RpY0JvcmRlcnMiLCJzaWduIiwiaXNOZWlnaGJvb3IiLCJlIiwiaCIsImF4aXNBbGlnbmVkQm91bmRhcnlCb3hlcyIsImFicyIsImV2ZXJ5IiwiY2FsY3VsYXRlU3VwZXJwb3NpdGlvbiIsIm4iLCJyIiwicmFuZG9tIiwiY29sbGlzaW9uUmFuZG9tbmVzcyIsImNvbGxpc2lvbnMiLCJjYWxjdWxhdGVjQ29sbGlzaW9ucyIsImNvbGxpc2lvbnNMaXN0Iiwic29tZSIsImxvb3AiLCJpbkhhc2giLCJwdXNoIiwicmVkdWNlIiwiYSIsImMiLCJ1cGRhdGUiLCJjb25zdHJ1Y3RvciIsImJvcmRlcnMiLCJpbml0YWxDb25kaXRpb25zUHJlc2V0cyIsInJhbmRvbUluaXRpYWxDb25kaXRpb25zIiwiYm94ZXMiLCJfIiwiaW5kZXgiLCJ1cGRhdGVQcmVzZXRzIiwiZHZkQW5pbWF0aW9uIiwiZGVsdGFUaW1lIiwidmVsb2NpdHkiLCJwb3NpdGlvbiIsInBvcyIsIkRyYWdBbmRHcmF2aXR5IiwiZHJhZ2dpbiIsImZsb3ciLCJ2IiwiRWxhc3RpY0NvbGxpc2lvbkNvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwidXNlRWxhc3RpY0NvbGxpc2lvbiIsInVzZUNvbnRleHQiLCJSZWFjdEVsYXN0aWNDb2xsaXNpb24iLCJjaGlsZHJlbiIsImNsYXNzTmFtZSIsImNvbmZpZyIsImJveGVzUmVmcyIsInVzZVJlZiIsIk1hcCIsInNlY3Rpb25SZWN0UmVmIiwic2VjdGlvblJlY3QiLCJ1c2VSZWN0IiwiZWxhc3RpY0NvbGxpc2lvbiIsInVzZVN0YXRlIiwiYWRkQm94IiwidXNlQ2FsbGJhY2siLCJzbGlkZSIsImN1cnJlbnQiLCJzZXQiLCJyZW1vdmVCb3giLCJkZWxldGUiLCJ1c2VFZmZlY3QiLCJ2YWx1ZXMiLCJpc0VtcHR5QXJyYXkiLCJhcnIiLCJBcnJheSIsImlzQXJyYXkiLCJpbnN0YW5jZXMiLCJ1c2VGcmFtZSIsImluc3RhbmNlIiwiUmVhY3QiLCJjcmVhdGVFbGVtZW50IiwicmVmIiwiUHJvdmlkZXIiLCJ2YWx1ZSIsIkNvbGxpc2lvbkJveCIsInByb3BzIiwib25EcmFnU3RvcCIsInNldFJlY3RSZWYiLCJlbGVtZW50UmVmIiwiYmluZCIsInVzZURyYWciLCJkb3duIiwibW92ZW1lbnQiLCJteCIsIm15IiwiZHJhZ0ZvcmNlUHJlc2V0c0xpYiIsImRlZmF1bHQiLCJjb25zb2xlIiwibG9nIiwiX2V4dGVuZHMiLCJub2RlIiwibCIsImQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/../packages/react/dist/elastic-collisions-react.mjs\n"));

/***/ })

});